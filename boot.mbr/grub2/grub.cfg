# DIFFERENCE BETWEEN GPT & MBR
# (hd0,gp2) != (hd0,msdos1)
#insmod part_gpt
#insmod efi_gop
#insmod efi_uga
insmod chain
insmod part_msdos
insmod fat
insmod linux
insmod loopback
insmod iso9660
insmod part_msdos
insmod fat        # If ISO is located on fat16 or fat32 formatted partition.
insmod ntfs       # If ISO is located on an NTFS formatted partition.
insmod keylayouts
keymap /boot/grub2/layout/fr.gkb

if [ -s $prefix/grubenv ]; then
  load_env
fi
set default="0"
if [ "${prev_saved_entry}" ]; then
  set saved_entry="${prev_saved_entry}"
  save_env saved_entry
  set prev_saved_entry=
  save_env prev_saved_entry
  set boot_once=true
fi
function savedefault {
  if [ -z "${boot_once}" ]; then
    saved_entry="${chosen}"
    save_env saved_entry
  fi
}

function load_video {
    true
}
set timeout=5

#insmod nftscomp   # If NTFS compression is used on the partition. Load if you aren't sure.
menuentry "KUbuntu 15.04 amd64 destop (live)" --class windows --class os {
    set isof='kubuntu-15.04-desktop-amd64.iso'
    loopback loop (hd0,msdos1)$isof
    set root=(loop)
    linux /casper/vmlinuz.efi iso-scan/filename=$isof file=/cdrom/preseed/ubuntu.seed boot=casper --
    initrd /casper/initrd.lz
}
menuentry "Ubuntu 15.04 amd64 destop (installer)" --class windows --class os {
    set isof='kubuntu-15.04-desktop-amd64.iso'
    loopback loop (hd0,msdos1)$isof
    set root=(loop)
    linux /casper/vmlinuz.efi iso-scan/filename=$isof file=/cdrom/preseed/ubuntu.seed boot=casper only-ubiquity  --
    initrd /casper/initrd.lz
}

menuentry "Ubuntu 15.04 amd64 server" --class windows --class os {
    set gfxpayload=keep
    set isof='/isos/ubuntu-15.04-server-amd64.iso'
    loopback loop (hd0,msdos1)$isof
    set root=(loop)
    linux /install/vmlinuz iso-scan/filename=$isof file=/cdrom/preseed/ubuntu-server.seed noeject --
    initrd /install/initrd.gz
}
menuentry "Ubuntu 15.04 amd64 destop (live)" --class windows --class os {
    set isof='/isos/ubuntu-15.04-desktop-amd64.iso'
    loopback loop (hd0,msdos1)$isof
    set root=(loop)
    linux /casper/vmlinuz.efi iso-scan/filename=$isof file=/cdrom/preseed/ubuntu.seed boot=casper --
    initrd /casper/initrd.lz
}
menuentry "Ubuntu 15.04 amd64 destop (installer)" --class windows --class os {
    set isof='/isos/ubuntu-15.04-desktop-amd64.iso'
    loopback loop (hd0,msdos1)$isof
    set root=(loop)
    linux /casper/vmlinuz.efi iso-scan/filename=$isof file=/cdrom/preseed/ubuntu.seed boot=casper only-ubiquity  --
    initrd /casper/initrd.lz
}
menuentry "Ubuntu 14.04 amd64 destop (live)" --class windows --class os {
    set isof='/isos/ubuntu-14.04-desktop-amd64.iso'
    loopback loop (hd0,msdos1)$isof
    set root=(loop)
    linux /casper/vmlinuz.efi iso-scan/filename=$isof file=/cdrom/preseed/ubuntu.seed boot=casper --
    initrd /casper/initrd.lz
}
menuentry "Ubuntu 14.04 amd64 destop (installer)" --class windows --class os {
    set isof='/isos/ubuntu-14.04-desktop-amd64.iso'
    loopback loop (hd0,msdos1)$isof
    set root=(loop)
    linux /casper/vmlinuz.efi iso-scan/filename=$isof file=/cdrom/preseed/ubuntu.seed boot=casper only-ubiquity  --
    initrd /casper/initrd.lz
}
menuentry "Ubuntu 14.04 amd64 server" --class windows --class os {
    set gfxpayload=keep
    set isof='/isos/ubuntu-14.04-server-amd64.iso'
    loopback loop (hd0,msdos1)$isof
    set root=(loop)
    linux /install/vmlinuz iso-scan/filename=$isof file=/cdrom/preseed/ubuntu-server.seed noeject --
    initrd /install/initrd.gz
}
menuentry "SystemRescue CD 64" --class windows --class os  {
    set isof="/isos/systemrescuecd-x86-4.2.0.iso"
    loopback loop (hd0,msdos1)$isof
    set root=(loop)
    linux (loop)/isolinux/rescue64 setkmap=fr isoloop=$isof
    initrd (loop)/isolinux/initram.igz
}
menuentry "Rescue a broken system" {
    set gfxpayload=keep
    linux /install/vmlinuz  file=/cdrom/preseed/ubuntu-server.seed noeject --
    initrd /install/initrd.gz
}
menuentry "Ubuntu 12.10 amd64" --class windows --class os {
    set isof="/isos/ubuntu-12.10-desktop-amd64.iso"
    loopback loop (hd0,msdos1)$isof
    set root=(loop)
    linux /casper/vmlinuz boot=casper iso-scan/filename=$isof noprompt noeject
    initrd /casper/initrd.lz
}
menuentry "Windows7 SP1 64b CDROM -- EFI A" --class windows --class os {
# grub2-probe --target=fs_uuid /livemnt/isostore/efi/microsoft/boot/cdboot.efi # A724-E1DE
#WIN_FSUUID=$(grub-probe --target=fs_uuid ${USB_MOUNTPOINT}/EFI/Microsoft/Boot/bootmgfw.efi)
#HINTS_STRING=$(grub-probe --target=hints_string ${USB_MOUNTPOINT}/EFI/Microsoft/Boot/bootmgfw.efi)
#--hint-bios=hd5,msdos1 --hint-efi=hd5,msdos1 --hint-baremetal=ahci5,msdos1
    terminal_output console
    set root='(hd0,msdos1)'
    search --fs-uuid --set=root A724-E1DE
    chainloader /bootmgfw.efi
}
menuentry "Windows7 SP1 64b CDROM -- EFI B" --class windows --class os {
# grub2-probe --target=fs_uuid /livemnt/isostore/efi/microsoft/boot/cdboot.efi # A724-E1DE
#WIN_FSUUID=$(grub-probe --target=fs_uuid ${USB_MOUNTPOINT}/EFI/Microsoft/Boot/bootmgfw.efi)
#HINTS_STRING=$(grub-probe --target=hints_string ${USB_MOUNTPOINT}/EFI/Microsoft/Boot/bootmgfw.efi)
#--hint-bios=hd5,msdos1 --hint-efi=hd5,msdos1 --hint-baremetal=ahci5,msdos1
    terminal_output console
    set root='(hd0,msdos1)'
    search --fs-uuid --set=root A724-E1DE
    chainloader (${root})/bootmgfw.efi
}
menuentry "Windows7 SP1 64b CDROM -- EFI C" --class windows --class os {
# grub2-probe --target=fs_uuid /livemnt/isostore/efi/microsoft/boot/cdboot.efi # A724-E1DE
#WIN_FSUUID=$(grub-probe --target=fs_uuid ${USB_MOUNTPOINT}/EFI/Microsoft/Boot/bootmgfw.efi)
#HINTS_STRING=$(grub-probe --target=hints_string ${USB_MOUNTPOINT}/EFI/Microsoft/Boot/bootmgfw.efi)
    terminal_output console
    set root='(hd0,msdos1)'
    search --fs-uuid --set=root A724-E1DE --hint-bios=hd5,msdos1 --hint-efi=hd5,msdos1 --hint-baremetal=ahci5,msdos1
    chainloader (${root})/bootmgfw.efi
}
menuentry "Windows7 SP1 64b CDROM -- EFI C" --class windows --class os {
# grub2-probe --target=fs_uuid /livemnt/isostore/efi/microsoft/boot/cdboot.efi # A724-E1DE
#WIN_FSUUID=$(grub-probe --target=fs_uuid ${USB_MOUNTPOINT}/EFI/Microsoft/Boot/bootmgfw.efi)
#HINTS_STRING=$(grub-probe --target=hints_string ${USB_MOUNTPOINT}/EFI/Microsoft/Boot/bootmgfw.efi)
    terminal_output console
    set root='(hd0,msdos1)'
    search --fs-uuid --set=root A724-E1DE --hint-bios=hd5,msdos1 --hint-efi=hd5,msdos1 --hint-baremetal=ahci5,msdos1
    chainloader /bootmgfw.efi
}
menuentry "Windows7 SP1 64b CDROM -- EFI2" --class windows --class os {
    set root='(hd0,msdos1)'
    find --set-root --ignore-floppies --ignore-cd /bootmgr.efi
    drivemap -s (hd0) ${root}
    chainloader /bootmgr.efi
}
menuentry "Windows7 SP1 64b CDROMI" --class windows --class os {
    set root='(hd0,msdos1)'
    find --set-root --ignore-floppies --ignore-cd /bootmgr
    drivemap -s (hd0) ${root}
    chainloader /bootmgr
}
menuentry "Windows7 SP1 64b CDROM OLD" --class windows --class os {
    set root='(hd0,msdos1)'
    search --no-floppy --fs-uuid --set=root B694F54C94F5101B
    drivemap -s (hd0) ${root}
    chainloader +1
    #ntldr (${root})/bootmgr
}
menuentry "SystemRescue CD 32" {
    set isof="/isos/systemrescuecd-x86-4.2.0.iso"
    loopback loop (hd0,msdos1)$isof
    set root=(loop)
    linux (loop)/isolinux/rescue setkmap=fr isoloop=$isof
    initrd (loop)/isolinux/initram.igz
}
menuentry "Gentoo 64" {
    set isof="/isos/install-amd64-minimal-20111013.iso"
    loopback loop (hd0,msdos1)$isofile
    set root=(loop)
    linux (loop)/boot/gentoo root=/dev/ram0 init=/linuxrc dokeymap looptype=squashfs loop=/image.squashfs cdroot initrd=/boot/gentoo.igz isoboot=$isof
    initrd (loop)/boot/gentoo.igz
}
