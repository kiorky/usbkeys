# DIFFERENCE BETWEEN GPT & MBR
# (hd0,msdos1) != (hd0,gpt2)
insmod part_gpt
insmod efi_gop
insmod efi_uga
insmod chain
insmod part_msdos
insmod fat
insmod linux
insmod loopback
insmod iso9660
insmod part_msdos
insmod fat
insmod ntfs
insmod keylayouts
keymap /boot/grub2/layout/fr.gkb

if [ -s $prefix/grubenv ]; then
  load_env
fi
set default="0"
if [ "${prev_saved_entry}" ]; then
  set saved_entry="${prev_saved_entry}"
  save_env saved_entry
  set prev_saved_entry=
  save_env prev_saved_entry
  set boot_once=true
fi
function savedefault {
  if [ -z "${boot_once}" ]; then
    saved_entry="${chosen}"
    save_env saved_entry
  fi
}

function load_video {
    true
}
set timeout=5
submenu "ubuntu" {
    #insmod nftscomp   # If NTFS compression is used on the partition. Load if you aren't sure.
    menuentry "/isos/kubuntu-18.04.2-desktop-amd64.iso" --class kubuntu --class ubuntu {
        set isof="/isos/kubuntu-18.04.2-desktop-amd64.iso"
        loopback loop (hd0,gpt2)$isof
        set root=(loop)
        linux /casper/vmlinuz iso-scan/filename=$isof locale=fr_FR console-setup/layoutcode=fr file=/cdrom/preseed/ubuntu.seed boot=casper --
        initrd /casper/initrd
    }
    menuentry "/isos/ubuntu-18.04.2-live-server-amd64.iso" --class ubuntu --class ubuntu {
        set isof="/isos/ubuntu-18.04.2-live-server-amd64.iso"
        loopback loop (hd0,gpt2)$isof
        set root=(loop)
        linux /casper/vmlinuz iso-scan/filename=$isof locale=fr_FR console-setup/layoutcode=fr file=/cdrom/preseed/ubuntu.seed boot=casper --
        initrd /casper/initrd
    }
    menuentry "/isos/kubuntu-16.04-desktop-amd64.iso" --class kubuntu --class ubuntu {
        set isof="/isos/kubuntu-16.04-desktop-amd64.iso"
        loopback loop (hd0,gpt2)$isof
        set root=(loop)
        linux /casper/vmlinuz.efi iso-scan/filename=$isof locale=fr_FR console-setup/layoutcode=fr file=/cdrom/preseed/ubuntu.seed boot=casper --
        initrd /casper/initrd.lz
    }
    menuentry "/isos/ubuntu-16.04-server-amd64.iso" --class ubuntu --class ubuntu {
        set isof="/isos/ubuntu-16.04-server-amd64.iso"
        set gfxpayload=keep
        loopback loop (hd0,gpt2)$isof
        set root=(loop)
        linux /install/vmlinuz iso-scan/filename=$isof locale=fr_FR console-setup/layoutcode=fr file=/cdrom/preseed/ubuntu-server.seed noeject --
        initrd /install/initrd.gz
    }
    menuentry "/isos/ubuntu-14.04-desktop-amd64.iso (installer)" --class ubuntu --class ubuntu {
        set isof="/isos/ubuntu-14.04-desktop-amd64.iso"
        loopback loop (hd0,gpt2)$isof
        set root=(loop)
        linux /casper/vmlinuz.efi iso-scan/filename=$isof locale=fr_FR console-setup/layoutcode=fr file=/cdrom/preseed/ubuntu.seed boot=casper only-ubiquity  --
        initrd /casper/initrd.lz
    }
    menuentry "/isos/ubuntu-14.04-server-amd64.iso" --class windows --class os {
        set isof="/isos/ubuntu-14.04-server-amd64.iso"
        set gfxpayload=keep
        loopback loop (hd0,gpt2)$isof
        set root=(loop)
        linux /install/vmlinuz iso-scan/filename=$isof locale=fr_FR console-setup/layoutcode=fr file=/cdrom/preseed/ubuntu-server.seed noeject --
        initrd /install/initrd.gz
    }
}
submenu "Mint" {
    menuentry "/isos/linuxmint-19.1-cinnamon-64bit.iso" --class mint --class ubuntu {
        set isof="/isos/linuxmint-19.1-cinnamon-64bit.iso"
        loopback loop (hd0,gpt2)$isof
        linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=$isof locale=fr_FR console-setup/layoutcode=fr locale=fr_FR console-setup/layoutcode=fr noprompt noeject toram
        initrd (loop)/casper/initrd.lz
    }
    menuentry "/isos/linuxmint-18.3-kde-64bit.iso" --class mint --class ubuntu {
        set isof="/isos/linuxmint-18.3-kde-64bit.iso"
        loopback loop (hd0,gpt2)$isof
        linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=$isof locale=fr_FR console-setup/layoutcode=fr locale=fr_FR console-setup/layoutcode=fr noprompt noeject toram
        initrd (loop)/casper/initrd.lz
    }
    menuentry "/isos/ubuntu-14.04-desktop-amd64.iso (live)" --class ubuntu --class ubuntu  {
        set isof="/isos/ubuntu-14.04-desktop-amd64.iso"
        loopback loop (hd0,gpt2)$isof
        set root=(loop)
        linux /casper/vmlinuz.efi iso-scan/filename=$isof locale=fr_FR console-setup/layoutcode=fr file=/cdrom/preseed/ubuntu.seed boot=casper --
        initrd /casper/initrd.lz
    }
}
submenu "Tails" {
    menuentry "tails-amd64-3.5.iso" --class tails {
        set isof="/isos/tails-amd64-3.5.iso"
        loopback loop (hd0,gpt2)$isof
        linux (loop)/live/vmlinuz boot=live config noswap nopersistent
        iso-scan/filename=$isof nomodeset
        initrd (loop)/live/initrd.img
    }
}
submenu "systemrescuecd" {
    menuentry "/isos/systemrescuecd-6.0.2.iso"  --class sysrescuecd {
        set isof="/isos/systemrescuecd-6.0.2.iso"
        loopback loop (hd0,gpt2)$isof
        set root=(loop)
        linux  (loop)/sysresccd/boot/x86_64/vmlinuz img_loop=$isof img_label=USBBOOT archisobasedir=sysresccd archisolabel=SYSRCD602 setkmap=fr
        initrd (loop)/sysresccd/boot/intel_ucode.img (loop)/sysresccd/boot/amd_ucode.img (loop)/sysresccd/boot/x86_64/sysresccd.img
    }
    menuentry "/isos/systemrescuecd-6.0.2.iso (ram)"  --class sysrescuecd {
        set isof="/isos/systemrescuecd-6.0.2.iso"
        loopback loop (hd0,gpt2)$isof
        set root=(loop)
        linux  (loop)/sysresccd/boot/x86_64/vmlinuz img_loop=$isof img_label=USBBOOT archisobasedir=sysresccd archisolabel=SYSRCD602 setkmap=fr
        initrd (loop)/sysresccd/boot/intel_ucode.img (loop)/sysresccd/boot/amd_ucode.img (loop)/sysresccd/boot/x86_64/sysresccd.img
    }
    menuentry "/isos/systemrescuecd-x86-5.2.0.iso"  --class sysrescuecd {
        set isof="/isos/systemrescuecd-x86-5.2.0.iso"
        loopback loop (hd0,gpt2)$isof
        set root=(loop)
        linux (loop)/isolinux/rescue64 setkmap=fr isoloop=$isof
        initrd (loop)/isolinux/initram.igz
    }
    menuentry "/isos/systemrescuecd-x86-5.2.0.iso 32b"   --class sysrescuecd  {
        set isof="/isos/systemrescuecd-x86-5.2.0.iso"
        loopback loop (hd0,gpt2)$isof
        set root=(loop)
        linux (loop)/isolinux/rescue setkmap=fr isoloop=$isof
        initrd (loop)/isolinux/initram.igz
    }
    menuentry "/isos/systemrescuecd-x86-4.2.0.iso"  --class sysrescuecd  {
        set isof="/isos/systemrescuecd-x86-4.2.0.iso"
        loopback loop (hd0,gpt2)$isof
        set root=(loop)
        linux (loop)/isolinux/rescue64 setkmap=fr isoloop=$isof
        initrd (loop)/isolinux/initram.igz
    }
    menuentry "/isos/systemrescuecd-x86-4.2.0.iso 32b" --class sysrescuecd {
        set isof="/isos/systemrescuecd-x86-4.2.0.iso"
        loopback loop (hd0,gpt2)$isof
        set root=(loop)
        linux (loop)/isolinux/rescue setkmap=fr isoloop=$isof
        initrd (loop)/isolinux/initram.igz
    }
    menuentry "/isos/systemrescuecd-x86-3.8.0.iso"  --class sysrescuecd  {
        set isof="/isos/systemrescuecd-x86-3.8.0.iso"
        loopback loop (hd0,gpt2)$isof
        set root=(loop)
        linux (loop)/isolinux/rescue64 setkmap=fr isoloop=$isof
        initrd (loop)/isolinux/initram.igz
    }
    menuentry "/isos/systemrescuecd-x86-3.8.0.iso 32b" --class sysrescuecd {
        set isof="/isos/systemrescuecd-x86-3.8.0.iso"
        loopback loop (hd0,gpt2)$isof
        set root=(loop)
        linux (loop)/isolinux/rescue setkmap=fr isoloop=$isof
        initrd (loop)/isolinux/initram.igz
    }
}
submenu windows {
    menuentry "MBR: ntldr /bootmgr" --class windows {
        set root=(hd0,gpt2)
        insmod ntldr
        ntldr /bootmgr
    }
    menuentry "EFI:/efi/win/bootx64.efi" --class windows {
        set root=(hd0,gpt2)
        chainloader ($root)/efi/win/bootx64.efi
    }
    menuentry "EFI:/efi/microsoft/boot/cdboot.efi" --class windows {
        set root=(hd0,gpt2)
        chainloader ($root)/efi/microsoft/boot/cdboot.efi
    }
}
